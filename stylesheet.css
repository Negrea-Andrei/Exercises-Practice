.grid-container {
  resize: both;
  overflow: auto;
  display: grid;
  gap: 14px;
  padding: 14px;
  border: 1px solid grey;
  background-color: skyblue;
  /* delete the comments to select the dimensions 
  grid-template-rows: repeat(2, 1fr);
  grid-template-columns: repeat(5, 1fr)*/ ;

  /*this will make the first and second column bigger than the rest */
  /*grid-template-rows: repeat(2, 1fr);
  grid-template-columns: repeat(2, 2fr) repeat(3, 1fr); */

  /*reminder: i can use both fr and px in the same grid to declare the size of the columns and rows */
  
  /*dynamic sizes using min() max() 
  grid-template-rows: repeat(2, min(200px, 50%));
  grid-template-columns: repeat(5, max(120px, 15%));*/
  /* use minmax()*/
  /*sets the grid rows and columns to be flexible depending on how you resize it*/
  /*grid-template-rows: repeat(2, 1fr);
  grid-template-columns: repeat(5, minmax(150px, 200px));*/

  /*use clamp for a flexible design */
  /*grid-template-rows: repeat(2, 1fr);
  grid-template-columns: repeat(5, clamp(1500px, 50%, 200px));*/
  
  /*use auto-fit and auto-fill for flexibility when it comes to columns and rows number */
  grid-template-rows: repeat(2, 1fr);
  grid-template-columns: repeat(auto-fill, 100px);

  /*use minmax() combine with auto-fit */
  /* auto-fit will make the columns retch there is max size if there is more room to fit more items*/
  /*if there are 4 items and room to fit a 5 column, the items are going to have the max size*/
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));

  /*use minmax() combine with auto-fill*/
  /* auto-fill will make the columns retch there mix size if there is more room to fit more items*/
  /*if there are 4 items and room to fit a 5 column, the items are going to have the min size*/
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
}

.grid-item {
  background-color: #444;
  text-align: center;
  color: #ddd;
  font-family: sans-serif;
  font-size: 1.5rem;
  padding: 12px;
}

p {
  margin: 12px auto 24px;
}

img {
  height: 60px;
}